{"version":3,"sources":["components/TodoAdd.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/todoReducer.js","components/TodoApp.js","index.js"],"names":["time","Date","now","toDateString","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","id","getTime","desc","date","done","type","className","placeholder","autoComplete","onChange","TodoListItem","todo","i","handleDelete","handleToggle","onClick","TodoList","todos","map","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"qLAIMA,EAAOC,KAAKC,MACZA,EAAM,IAAID,KAAKD,GACrBE,EAAIC,eAGG,IAAMC,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEtB,ECTmB,WAA0B,IAAxBC,EAAuB,uDAAR,GAGpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAiBA,MAAO,CAAED,EATiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACzBD,EAAU,2BACHD,GADE,kBAEHE,EAAOC,KAAQD,EAAOE,UATlB,WACVH,EAAWH,KDGyCO,CAAQ,CAC5DC,YAAa,KADjB,mBAAWA,EAAX,KAAWA,YAAeC,EAA1B,KAA8CC,EAA9C,KAqBA,OACI,qCACC,8CACG,uBAEA,uBAAMC,SAtBO,SAACC,GAElB,GADAA,EAAEC,mBACGL,EAAYM,OAAOC,QAAU,GAAlC,CAGI,IAAMC,EAAU,CACZC,IAAI,IAAItB,MAAOuB,UACfC,KAAMX,EACNY,KAAMxB,EAAIC,eACVwB,MAAM,GAGVtB,EAAeiB,GACfN,MASA,UACI,uBACIY,KAAK,OACLjB,KAAK,cACLkB,UAAU,eACVC,YAAY,oBACZC,aAAa,MACbnB,MAAQE,EACRkB,SAAWjB,IAGf,wBACIa,KAAK,SACLC,UAAU,wCAFd,4BE5CHI,G,KAAe,SAAC,GAAgD,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,EAAIC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,aAGpD,OACI,qBAEIR,UAAU,kBAFd,UAII,oBACIA,UAAS,UAAOK,EAAKP,MAAQ,YAC7BW,QAAU,kBAAMD,EAAcH,EAAKX,KAFvC,UAGGY,EAAI,EAHP,KAGcD,EAAKT,KAHnB,MAG8BS,EAAKR,QACnC,wBACIG,UAAU,iBACVS,QAAU,kBAAMF,EAAaF,EAAKX,KAFtC,sBAPMW,EAAKX,MCNVgB,EAAW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOJ,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAG5C,OACI,oBAAIR,UAAU,8BAAd,SAEQW,EAAMC,KAAK,SAACP,EAAMC,GAAP,OACP,cAAC,EAAD,CACID,KAAOA,EACPC,EAAMA,EAENC,aAAiBA,EACjBC,aAAiBA,GAFTH,EAAKX,U,QCZxBmB,EAAc,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,OAAQA,EAAOhB,MACX,IAAK,MACD,MAAM,GAAN,mBAAYe,GAAZ,CAAmBC,EAAOC,UAE9B,IAAK,SACD,OAAOF,EAAMG,QAAQ,SAAAZ,GAAI,OAAIA,EAAKX,KAAOqB,EAAOC,WAEpD,IAAK,SAOL,IAAK,aACD,OAAOF,EAAMF,KAAK,SAAAP,GAEd,OAAKA,EAAKX,KAAOqB,EAAOC,QACb,2BACAX,GADP,IAEIP,MAAOO,EAAKP,OAGTO,KAKnB,QACI,OAAOS,ICvBbI,EAAO,WAET,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAU3CC,EAAU,WAEnB,MAA4BC,qBAAWX,EAAa,GAAKK,GAAzD,mBAAQP,EAAR,KAAec,EAAf,KAGAC,qBAAU,WACNL,aAAaM,QAAQ,QAASR,KAAKS,UAAWjB,MAC/C,CAACA,IA4BJ,OACI,gCACI,4CAAgBA,EAAMnB,OAAtB,QACA,uBAEA,sBAAKQ,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SAEI,cAAC,EAAD,CACIW,MAAUA,EACVJ,aApCC,SAAEsB,GAMnBJ,EALe,CACX1B,KAAM,SACNiB,QAASa,KAkCGrB,aA5BC,SAAEqB,GAEnBJ,EAAS,CACL1B,KAAK,SACLiB,QAASa,SA4BL,qBAAK7B,UAAU,QAAf,SAEI,cAAC,EAAD,CACIxB,cA1BE,SAAEiB,GAEpBgC,EAAS,CACL1B,KAAM,MACNiB,QAASvB,gBChDrBqC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.7ff488fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\n\r\nconst time = Date.now();\r\nconst now = new Date(time);\r\nnow.toDateString();\r\n\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const  [ { description }, handleInputChange , reset ] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( description.trim().length <= 1){\r\n            return;\r\n        } else {\r\n            const newTodo = {\r\n                id: new Date().getTime(),\r\n                desc: description,\r\n                date: now.toDateString(),\r\n                done: false\r\n            }\r\n            \r\n            handleAddTodo( newTodo );\r\n            reset();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <h4>Agregar TODO</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter the task...\"\r\n                    autoComplete=\"off\"\r\n                    value={ description }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-lg mt-1 btn-block\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    //Nuestro useForm recibe un objeto, cada propiedad del objeto va a ser un campo de texto o un selector, etc\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    //El handleinputchange nos sirve para leerlo rápidamente\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return [ values, handleInputChange, reset ];\r\n    \r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css'\r\n\r\nexport const TodoListItem = ( { todo, i , handleDelete, handleToggle } ) => {\r\n\r\n\r\n    return (\r\n        <li\r\n            key={ todo.id }\r\n            className=\"list-group-item\"\r\n        >\r\n            <p \r\n                className={ `${ todo.done && 'complete'}` }\r\n                onClick={ () => handleToggle( todo.id ) }\r\n            >{ i + 1 }. { todo.desc } - { todo.date }</p>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ () => handleDelete(todo.id) }\r\n\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n\r\n\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map( (todo, i) => (\r\n                    <TodoListItem \r\n                        todo={ todo } \r\n                        i = { i }\r\n                        key = { todo.id }\r\n                        handleDelete = { handleDelete }\r\n                        handleToggle = { handleToggle }\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","\r\nexport const todoReducer = ( state = [], action ) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [ ...state, action.payload ];\r\n        \r\n        case 'delete':\r\n            return state.filter( todo => todo.id !== action.payload ); //id\r\n\r\n        case 'toggle':\r\n            return state.map( todo => \r\n                    todo.id === action.payload \r\n                        ? {...todo, done: !todo.done }\r\n                        : todo\r\n                )\r\n\r\n        case 'toggle-old':\r\n            return state.map( todo => {\r\n\r\n                if ( todo.id === action.payload ) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n\r\n            })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { useReducer } from 'react'\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\nimport { todoReducer } from './todoReducer'\r\n\r\nimport './styles.css'\r\n\r\n//La funcion init se llama en el useReducer y lo que sea que retorne es lo que va a ser el initialState\r\nconst init = () => {\r\n    //Si esta linea regresa null, retornará un arreglo vacío.\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n\r\n    // return [{\r\n    //     id: new Date().getTime(),\r\n    //     desc: 'Learn React',\r\n    //     date: now.toDateString(),\r\n    //     done: false\r\n    // }];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n    \r\n    const [ todos, dispatch ] = useReducer(todoReducer, [] , init )\r\n    \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [todos]);\r\n\r\n    const handleDelete = ( todoId ) => {\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch( action );\r\n    }\r\n\r\n    const handleToggle = ( todoId ) => {\r\n        \r\n        dispatch({\r\n            type:'toggle',\r\n            payload: todoId\r\n        })\r\n\r\n    }\r\n\r\n    const handleAddTodo = ( newTodo ) => {\r\n\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp ( { todos.length } )</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n\r\n                    <TodoList \r\n                        todos = { todos } \r\n                        handleDelete={ handleDelete } \r\n                        handleToggle={ handleToggle }\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col-5\">\r\n\r\n                    <TodoAdd \r\n                        handleAddTodo={ handleAddTodo }\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}